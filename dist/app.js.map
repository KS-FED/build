{"version":3,"sources":["webpack:///webpack/bootstrap b51fffbb8aec388aacba","webpack:///./dev/js/app.js","webpack:///./dev/js/config/index.js"],"names":["name","console","log","proxy_mock","Vue","require","mock","proxy"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAiD,6BAA6B,eAAe;AAC7F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACzFA;;AACA,wBAAW,EAACA,MAAK,QAAN,EAAX;;AAEAC,SAAQC,GAAR,CAAY,OAAZ;AACAD,SAAQC,GAAR,CAAY,SAAZ,E;;;;;;;;;;;SCAgBC,U,GAAAA,U;AAJhB;;;;AAIO,UAASA,UAAT,CAAoBC,GAApB,EAAwB;AAC3B,SAAG,IAAH,EAAkB;AACdC,SAAA,sEAAQ,qCAAC,sBAAD,CAAR,GAAyB,gBAAsB;AAAA,iBAAZC,IAAY,QAAZA,IAAY;AAAA,iBAAPC,KAAO,QAAPA,KAAO;;AAC3CD,kBAAKF,GAAL;AACAG,mBAAMH,GAAN;AACH,U,6CAHD;AAIH;AACJ,E","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t0:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".\" + {\"1\":\"6e4352b7\"}[chunkId] + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b51fffbb8aec388aacba\n **/","import { proxy_mock } from './config/index'\nproxy_mock({name:'config'})\n\nconsole.log(APP_ENV)\nconsole.log(APP_VERSION)\n\n\n/** WEBPACK FOOTER **\n ** ./dev/js/app.js\n **/","/**\n * [proxy_mock 代理、mock]\n * @param  {[type]} Vue [Vue]\n */\nexport function proxy_mock(Vue){\n    if(APP_ENV=='dev'){\n        require(['./proxy-mock'],function({mock,proxy}){\n            mock(Vue)\n            proxy(Vue)\n        })    \n    }    \n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./dev/js/config/index.js\n **/"],"sourceRoot":""}